pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        def propertiesFile = new File(rootProject.projectDir.parentFile, 'local.properties')
        
        // First try to get from local.properties
        if (propertiesFile.exists()) {
            propertiesFile.withReader('UTF-8') { reader -> properties.load(reader) }
            def localFlutterSdk = properties.getProperty('flutter.sdk')
            if (localFlutterSdk != null && new File(localFlutterSdk).exists()) {
                return localFlutterSdk
            }
        }
        
        // Fallback to environment variables (for CI/CD environments)
        def envFlutterSdk = System.getenv('FLUTTER_ROOT')
        if (envFlutterSdk != null && new File(envFlutterSdk).exists()) {
            return envFlutterSdk
        }
        
        // Try to find Flutter in PATH
        def flutterCommand = System.getProperty('os.name').toLowerCase().contains('windows') ? 'flutter.bat' : 'flutter'
        def process = ['which', flutterCommand].execute()
        process.waitFor()
        if (process.exitValue() == 0) {
            def flutterPath = process.text.trim()
            if (flutterPath) {
                def flutterBin = new File(flutterPath).parentFile
                def flutterRoot = flutterBin.parentFile
                if (new File(flutterRoot, 'packages/flutter_tools/gradle').exists()) {
                    return flutterRoot.absolutePath
                }
            }
        }
        
        // Last resort: check common Flutter installation paths
        def commonPaths = [
            System.getProperty('user.home') + '/flutter',
            System.getProperty('user.home') + '/development/flutter',
            '/opt/flutter',
            '/usr/local/flutter'
        ]
        
        for (String path : commonPaths) {
            if (new File(path, 'packages/flutter_tools/gradle').exists()) {
                return path
            }
        }
        
        throw new GradleException("Flutter SDK not found. Please ensure Flutter is installed and either set flutter.sdk in local.properties or set FLUTTER_ROOT environment variable.")
    }()

    includeBuild("${flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "8.7.3" apply false
    id "org.jetbrains.kotlin.android" version "2.1.0" apply false
}

include ':app' 